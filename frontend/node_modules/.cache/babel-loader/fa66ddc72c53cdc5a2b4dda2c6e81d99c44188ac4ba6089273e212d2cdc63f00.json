{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91861\\\\recipeproject\\\\Recipe-Sharing-Website\\\\frontend\\\\src\\\\screens\\\\Recipe\\\\RecipeDetails.js\",\n  _s = $RefreshSig$();\n// Importing necessary modules\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport './RecipeDetails.css';\nimport RecipeCard from 'frontend/src/screens/Recipe/RecipeCard.js'; // If default export\n\n// Recipe Details component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecipeDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the recipe id from the URL\n  const [recipe, setRecipe] = useState(null);\n  useEffect(() => {\n    const fetchRecipeDetails = async () => {\n      try {\n        // Fetching the recipe details from the API using the recipe id\n        const response = await axios.get(`http://localhost:5000/api/recipes/${id}`);\n        setRecipe(response.data);\n      } catch (err) {\n        console.error('Error fetching recipe details', err);\n      }\n    };\n    fetchRecipeDetails();\n  }, [id]);\n\n  // If the recipe is still loading, show loading message\n  if (!recipe) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: recipe.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: recipe.image,\n      alt: recipe.title,\n      className: \"recipe-details-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this), \" \", recipe.category]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Difficulty:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }, this), \" \", recipe.difficulty]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Ingredients:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: ingredient\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Instructions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }, this), \" \", recipe.instructions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n// Express API Endpoint (backend)\n_s(RecipeDetails, \"mspyGayhjAFc7aood8Dr22WglZg=\", false, function () {\n  return [useParams];\n});\n_c = RecipeDetails;\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst Recipe = require('./models/Recipe'); // Assuming you have a Recipe model\n\nconst app = express();\nconst port = 5000;\nmongoose.connect('mongodb://localhost:27017/recipes', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\napp.get('/api/recipes/:id', async (req, res) => {\n  try {\n    // Fetching recipe from MongoDB using the recipe ID\n    const recipe = await Recipe.findById(req.params.id);\n    if (!recipe) {\n      return res.status(404).json({\n        message: 'Recipe not found'\n      });\n    }\n\n    // Returning the recipe data as a JSON response\n    res.json(recipe);\n  } catch (err) {\n    res.status(500).json({\n      message: 'Server error'\n    });\n  }\n});\napp.listen(port, () => {\n  console.log(`Server is running on http://localhost:${port}`);\n});\nvar _c;\n$RefreshReg$(_c, \"RecipeDetails\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","RecipeCard","jsxDEV","_jsxDEV","RecipeDetails","_s","id","recipe","setRecipe","fetchRecipeDetails","response","get","data","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","src","image","alt","category","difficulty","ingredients","map","ingredient","index","instructions","_c","express","require","mongoose","Recipe","app","port","connect","useNewUrlParser","useUnifiedTopology","req","res","findById","params","status","json","message","listen","log","$RefreshReg$"],"sources":["C:/Users/91861/recipeproject/Recipe-Sharing-Website/frontend/src/screens/Recipe/RecipeDetails.js"],"sourcesContent":["// Importing necessary modules\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport './RecipeDetails.css';\r\nimport RecipeCard from 'frontend/src/screens/Recipe/RecipeCard.js'; // If default export\r\n\r\n// Recipe Details component\r\nexport const RecipeDetails = () => {\r\n  const { id } = useParams(); // Get the recipe id from the URL\r\n  const [recipe, setRecipe] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchRecipeDetails = async () => {\r\n      try {\r\n        // Fetching the recipe details from the API using the recipe id\r\n        const response = await axios.get(`http://localhost:5000/api/recipes/${id}`);\r\n        setRecipe(response.data);\r\n      } catch (err) {\r\n        console.error('Error fetching recipe details', err);\r\n      }\r\n    };\r\n\r\n    fetchRecipeDetails();\r\n  }, [id]);\r\n\r\n  // If the recipe is still loading, show loading message\r\n  if (!recipe) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"recipe-details-container\">\r\n      <h1>{recipe.title}</h1>\r\n      <img src={recipe.image} alt={recipe.title} className=\"recipe-details-image\" />\r\n      <p><strong>Category:</strong> {recipe.category}</p>\r\n      <p><strong>Difficulty:</strong> {recipe.difficulty}</p>\r\n      <p><strong>Ingredients:</strong></p>\r\n      <ul>\r\n        {recipe.ingredients.map((ingredient, index) => (\r\n          <li key={index}>{ingredient}</li>\r\n        ))}\r\n      </ul>\r\n      <p><strong>Instructions:</strong> {recipe.instructions}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Express API Endpoint (backend)\r\nconst express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst Recipe = require('./models/Recipe'); // Assuming you have a Recipe model\r\n\r\nconst app = express();\r\nconst port = 5000;\r\n\r\nmongoose.connect('mongodb://localhost:27017/recipes', {\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n});\r\n\r\napp.get('/api/recipes/:id', async (req, res) => {\r\n  try {\r\n    // Fetching recipe from MongoDB using the recipe ID\r\n    const recipe = await Recipe.findById(req.params.id);\r\n    \r\n    if (!recipe) {\r\n      return res.status(404).json({ message: 'Recipe not found' });\r\n    }\r\n\r\n    // Returning the recipe data as a JSON response\r\n    res.json(recipe);\r\n  } catch (err) {\r\n    res.status(500).json({ message: 'Server error' });\r\n  }\r\n});\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server is running on http://localhost:${port}`);\r\n});\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}